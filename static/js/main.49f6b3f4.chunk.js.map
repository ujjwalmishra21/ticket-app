{"version":3,"sources":["store/actions/actionTypes.js","utility/utility.js","hoc/asyncComponent/asyncComponent.js","components/UI/NavItems/NavItem/NavItem.js","components/UI/NavItems/NavItems.js","App.js","serviceWorker.js","store/reducers/store.js","store/reducers/auth.js","store/reducers/slot.js","store/reducers/booking.js","store/reducers/location.js","index.js","hoc/Aux/Aux.js","axios-order.js","store/actions/store.js","store/actions/auth.js","store/actions/slot.js","store/actions/booking.js","store/actions/location.js"],"names":["ADD_STORE_START","ADD_STORE_SUCCESS","ADD_STORE_FAIL","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAIL","FETCH_STORES_START","FETCH_STORES_SUCCESS","FETCH_STORES_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","AUTH_INIT_START","AUTH_INIT_SUCCESS","AUTH_INIT_FAIL","FETCH_SLOTS_START","FETCH_SLOTS_SUCCESS","FETCH_SLOTS_FAIL","SET_AUTH_REDIRECT_PATH","CREATE_BOOKING_START","CREATE_BOOKING_SUCCESS","CREATE_BOOKING_FAIL","FETCH_BOOKING_START","FETCH_BOOKING_SUCCESS","FETCH_BOOKING_FAIL","FETCH_LOCATION_START","FETCH_LOCATION_SUCCESS","FETCH_LOCATION_FAIL","updatedObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","asyncComponent","importComponent","state","component","then","cmp","setState","default","C","this","props","Component","NavItem","Menu","Item","name","active","activeItem","onClick","clicked","className","NavItems","visible","handleItemClick","e","toggleVisibility","nav","Sidebar","Pushable","as","Segment","animation","icon","inverted","onHide","vertical","width","navList","map","navListItem","to","path","Pusher","dimmed","basic","Icon","size","children","Aux","asyncSignUp","aysncLogin","asyncOTP","asyncAddStore","asyncGetStores","asyncMyBookings","asyncGetHome","asyncLogout","App","onTryAutoLogin","route","isAuthenticated","addStore","parseInt","userData","type","exact","withRouter","connect","auth","token","data","dispatch","action","Boolean","window","location","hostname","match","initialState","stores","loading","error","response","addStoreStart","addStoreSuccess","addStoreFail","fetchStoresStart","fetchStoresSuccess","fetchStoresFail","reducer","actionTypes","mobile_number","authRedirectPath","signUpStart","signUpSuccess","signUpFail","authInitStart","authInitSuccess","authInitFail","authStart","authSuccess","authFail","authLogout","setAuthRedirectPath","slots","fetchSlotsStart","fetchSlotsSuccess","fetchSlotsFail","message","booking","createBookingStart","createBookingSuccess","createBookingFail","fetchBookingStart","fetchBookingSuccess","fetchBookingFail","location_data","fetchLocationStart","fetchLocationSuccess","fetchLocationFail","composeEnhancers","compose","rootReducers","combineReducers","store","storeReducer","authReducer","slot","slotReducer","bookingReducer","locationReducer","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","aux","instance","axios","create","baseURL","log","JSON","stringify","config","headers","post","status","err","fetchStores","params","a","queryParams","get","forEach","push","signUp","authInit","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","otp","expirationDate","Date","getTime","setItem","authCheckState","getItem","expiryDate","parse","fetchSlots","createBooking","fetchBooking","user_data","user_id","fetchLocation","geolocation","getCurrentPosition","position","latitude","coords","longitude","Response","View","Result","Location","Address"],"mappings":"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","file":"static/js/main.49f6b3f4.chunk.js","sourcesContent":["export const ADD_STORE_START = 'ADD_STORE_START';\nexport const ADD_STORE_SUCCESS = 'ADD_STORE_SUCCESS';\nexport const ADD_STORE_FAIL = 'ADD_STORE_FAIL';\n\nexport const SIGNUP_START = 'SIGNUP_START';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\n\nexport const FETCH_STORES_START = 'FETCH_STORES_START';\nexport const FETCH_STORES_SUCCESS = 'FETCH_STORES_SUCCESS';\nexport const FETCH_STORES_FAIL = 'FETCH_STORES_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const AUTH_INIT_START = 'AUTH_INIT_START';\nexport const AUTH_INIT_SUCCESS = 'AUTH_INIT_SUCCESS';\nexport const AUTH_INIT_FAIL = 'AUTH_INIT_FAIL';\nexport const AUTH_INIT = 'AUTH_INIT';\n\nexport const FETCH_SLOTS_START = 'FETCH_SLOTS_START';\nexport const FETCH_SLOTS_SUCCESS = 'FETCH_SLOTS_SUCCESS';\nexport const FETCH_SLOTS_FAIL = 'FETCH_SLOTS_FAIL';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\n\nexport const CREATE_BOOKING_START = 'CREATE_BOOKING_START';\nexport const CREATE_BOOKING_SUCCESS = 'CREATE_BOOKING_SUCCESS';\nexport const CREATE_BOOKING_FAIL = 'CREATE_BOOKING_FAIL';\n\nexport const FETCH_BOOKING_START = 'FETCH_BOOKING_START';\nexport const FETCH_BOOKING_SUCCESS = 'FETCH_BOOKING_SUCCESS';\nexport const FETCH_BOOKING_FAIL = 'FETCH_BOOKIN_FAIL';\n\nexport const FETCH_LOCATION_START = 'FETCH_LOCATION';\nexport const FETCH_LOCATION_SUCCESS = 'FETCH_LOCATION_SUCCESS';\nexport const FETCH_LOCATION_FAIL = 'FETCH_LOCATION_FAIL';\n\n\n","export const updatedObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n};\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true;\n    if(!rules){\n        return true;\n    }\n\n    if(rules.required){\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if(rules.minLength){\n        isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if(rules.maxLength){\n        isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n    \n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n    \n    return isValid;\n}","import React, { Component } from 'react';\n\nconst asyncComponent = (importComponent) => {\n    return class extends Component {\n        state = {\n            component: null\n        };\n\n        componentDidMount(){\n            importComponent().then(cmp => {\n                this.setState({component: cmp.default});\n            });\n        }\n\n        render(){\n            const C = this.state.component;\n\n            return C ? <C {...this.props}/> : null;\n        }\n    }\n}\n\nexport default asyncComponent;","import React, { Component } from 'react';\nimport Aux from '../../../../hoc/Aux/Aux';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Menu } from 'semantic-ui-react';\nimport './NavItem.css';\nconst NavItem = (props) => {\n    \n    return (\n       <Menu.Item\n        name={props.name}\n        active={props.activeItem === props.name}\n        onClick={props.clicked}\n        className=\"navitem\"\n      >\n      {props.name}\n      </Menu.Item>\n    );\n};\n\nexport default NavItem\n\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport { Header, Icon, Image, Menu, Segment, Sidebar, Button, Divider } from 'semantic-ui-react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport NavItem from './NavItem/NavItem';\n\nimport './NavItems.css';\n\nclass NavItems extends Component{\n    state = {\n        activeItem: 'home',\n        visible: false\n    }\n    \n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n    toggleVisibility = () => this.setState({ visible: !this.state.visible})\n\n    render() {\n      const { activeItem, visible } = this.state\n        \n      let nav = (\n        \n        <Sidebar.Pushable as={Segment}>\n        <Sidebar\n        as={Menu}\n        animation='overlay'\n        icon='labeled'\n        inverted\n        onHide={this.toggleVisibility}\n        vertical\n        visible={visible}\n        width='thin'>\n            {    \n                this.props.navList.map(navListItem => {\n                   return(<Link to={navListItem.path}>\n                        <NavItem \n                            name={navListItem.name}\n                            activeItem = {activeItem}\n                            clicked={this.handleItemClick}\n                        />\n                    </Link>);\n                })\n            }\n        </Sidebar>\n      \n        <Sidebar.Pusher dimmed={visible}>\n        <Segment basic>\n        <div className=\"navbar-section\">\n                <div className=\"navbar-button\" onClick={this.toggleVisibility}>\n                <Icon name=\"sidebar\" size=\"big\" />\n                </div>\n                <div className=\"logo-navbar\">\n                 <Link to=\"/\"><h2>SPOTBook</h2></Link>\n                </div>\n            </div>\n         {this.props.children}\n        </Segment>\n      </Sidebar.Pusher>\n    </Sidebar.Pushable>\n      )\n        \n      \n      return (\n        <Aux>\n          \n            {nav}\n        </Aux>\n      );\n    }\n\n}\n\nexport default NavItems;","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect, Link} from 'react-router-dom';\n// import Signup from './containers/Signup/Signup';\nimport { connect } from 'react-redux';\nimport { Image } from 'semantic-ui-react';\nimport './App.css';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\nimport NavItems from './components/UI/NavItems/NavItems';\nimport * as action from './store/actions/index';\nimport NavItem from './components/UI/NavItems/NavItem/NavItem';\n\nconst asyncSignUp = asyncComponent(() => {\n  return import('./containers/Signup/Signup');\n})\n\nconst aysncLogin = asyncComponent(() => {\n  return import('./containers/Login/Login');\n})\n\nconst asyncOTP = asyncComponent(() => {\n  return import ('./containers/OTP/OTP');\n})\n\nconst asyncAddStore = asyncComponent(() => {\n  return import ('./containers/AddStore/AddStore');\n})\n\nconst asyncGetStores = asyncComponent(() => {\n  return import ('./containers/GetStores/GetStores');\n})\n\nconst asyncMyBookings = asyncComponent(() => {\n  return import ('./containers/MyBookings/MyBookings');\n})\n\nconst asyncGetHome = asyncComponent(() => {\n  return import ('./containers/Home/Home');\n})\n\nconst asyncLogout = asyncComponent(() => {\n  return import ('./containers/Logout/Logout');\n})\n\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoLogin();\n  }\n\n  render(){\n    let navList = [\n      {\n        name:'Login',\n        path:'/login'\n      }, \n      {\n        name:'Signup',\n        path:'/signup'\n      }];\n\n    let route = (\n      <Switch>\n        <Route path=\"/otp\" component={asyncOTP} />\n        <Route path=\"/signup\" component={asyncSignUp} />\n        <Route path=\"/login\" component={aysncLogin} />\n        \n        <Redirect to=\"/\"/>\n       </Switch>\n    );\n    if(this.props.isAuthenticated){\n      \n      let addStore = null;\n\n      if(parseInt(this.props.userData.type) === 1){\n        \n        navList = [\n          {name:'Home', path:'/'},\n          {name:'Add Store', path:'/addStore'},\n          {name:'Get Store', path:'/getStore'},\n          {name:'My Bookings', path:'/myBookings'},\n          {name: 'Logout', path:'/logout'},\n        ];\n        addStore = <Route path=\"/addStore\" component={asyncAddStore} /> ;\n        \n      }else{\n        navList = [\n          {name:'Home', path:'/'},\n          {name:'Get Store', path:'/getStore'},\n          {name:'My Bookings', path:'/myBookings'},\n          {name: 'Logout', path:'/logout'},\n        ];\n      }\n      \n      route = (\n        <Switch>\n            {addStore}\n            <Route path=\"/getStore\" component={asyncGetStores} />\n            <Route path=\"/myBookings\" component={asyncMyBookings} />\n            <Route path=\"/logout\" component={asyncLogout} />\n            <Route path=\"/\" exact component={asyncGetHome}/>\n            <Redirect to=\"/\"/>\n          </Switch>\n      );\n     \n    \n      \n    }\n\n    return (\n      <div className=\"App\">\n       \n          {/* <div className=\"Navbar\"> */}\n            <NavItems navList={navList}>\n            <header className=\"App-header\">\n              \n            {route}\n            </header>\n            </NavItems>\n          {/* </div> */}\n        \n         \n         \n          {/* <Link className=\"ui button\" to=\"/signup\">Signup</Link>\n          <Link className=\"ui button\" to=\"/login\">Login</Link>\n          <Link className=\"ui button\" to=\"/otp\">OTP</Link>\n          <Link className=\"ui button\" to=\"/addStore\">Add Store</Link> */}\n       \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    userData: state.auth.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoLogin: () => dispatch(action.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\nimport { updatedObject } from '../../utility/utility';\n\nconst initialState = {\n    stores: [],\n    loading: false,\n    error: null,\n    response: null   \n};\n\nconst addStoreStart = (state, action) => {\n    return updatedObject(state, {\n        error:null,\n        loading: true\n    });\n};\n\nconst addStoreSuccess = (state, action) => {\n    return updatedObject(state, {\n        loading: false,\n        response: action.response\n    });\n};\n\nconst addStoreFail = (state, action) => {\n    return updatedObject(state, {\n        loading: false,\n        error: action.error\n    })\n};\n\nconst fetchStoresStart = (state,action) => {\n    return updatedObject(state, {\n        error:null,\n        loading: true\n    });\n};\n\nconst fetchStoresSuccess = (state, action) => {\n    return updatedObject(state, {\n        stores: action.stores,\n        loading: false\n    });\n};\n\nconst fetchStoresFail = (state, action) => {\n    return updatedObject(state, {\n        loading: false,\n        error: action.error\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.FETCH_STORES_START:\n            return fetchStoresStart(state, action);\n        case actionTypes.FETCH_STORES_SUCCESS:\n            return fetchStoresSuccess(state, action);\n        case actionTypes.FETCH_STORES_FAIL:\n            return fetchStoresFail(state, action);\n        case actionTypes.ADD_STORE_START:\n            return addStoreStart(state, action);\n        case actionTypes.ADD_STORE_SUCCESS:\n            return addStoreSuccess(state, action);\n        case actionTypes.ADD_STORE_FAIL:\n            return addStoreFail(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updatedObject } from '../../utility/utility';\n\nconst initialState = {\n    token: null,\n    data: null,\n    error: null,\n    loading: false,\n    mobile_number: null,\n    authRedirectPath: '/'\n};\n\nconst signUpStart = (state, action) => {\n    return updatedObject(state, { error: null, loading: true });\n};\n\nconst signUpSuccess = (state, action) => {\n    return updatedObject(state, { loading: false});\n};\n\nconst signUpFail = (state, action) => {\n    return updatedObject(state,  { error: action.error, loading: false });\n}\n\nconst authInitStart = (state, action) => {\n    return updatedObject(state, { error: null, loading: true});\n};\n\nconst authInitSuccess = (state, action) => {\n    return updatedObject(state, { \n        error: null,\n        loading: false,\n        mobile_number: action.mobile_number\n    });\n};\n\nconst authInitFail = (state, action) => {\n    return updatedObject(state, { error: action.error, loading: false})\n};\n\nconst authStart = (state, action) => {\n    return updatedObject(state, { error: null, loading: true});\n};\n\nconst authSuccess = (state, action) => {\n    return updatedObject(state, { \n        error: null,\n        token: action.token,\n        data: action.data,\n        loading: false\n    });\n};\n\nconst authFail = (state, action) => {\n    return updatedObject(state, { error: action.error, loading: false });\n};\n\nconst authLogout = (state, action) => {\n    return updatedObject(state, { token: null, data: null});\n};\n\nconst setAuthRedirectPath = (state, action) => {\n    return updatedObject(state, {authRedirectPath: action.path});\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.SIGNUP_START:\n            return signUpStart(state, action);\n        case actionTypes.SIGNUP_SUCCESS:\n            return signUpSuccess(state, action);\n        case actionTypes.SIGNUP_FAIL:\n            return signUpFail(state, action);\n        case actionTypes.AUTH_INIT_START:\n            return authInitStart(state, action);\n        case actionTypes.AUTH_INIT_SUCCESS:\n            return authInitSuccess(state, action);\n        case actionTypes.AUTH_INIT_FAIL:\n            return authInitFail(state, action);\n        case actionTypes.AUTH_START:\n            return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS:\n            return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL:\n            return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT:\n            return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\n            return setAuthRedirectPath(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updatedObject } from '../../utility/utility';\n\nconst initialState = {\n    slots: [],\n    loading: false\n};\n\nconst fetchSlotsStart = (state, action) => {\n    return updatedObject(state, { loading:true });\n};\n\nconst fetchSlotsSuccess = (state, action) => {\n    return updatedObject(state, {\n        slots:action.slots,\n        loading:false\n    });\n};\n\nconst fetchSlotsFail = (state, action) => {\n    return updatedObject(state,  { loading:false });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.FETCH_SLOTS_START:\n            return fetchSlotsStart(state, action);\n        case actionTypes.FETCH_SLOTS_SUCCESS:\n            return fetchSlotsSuccess(state, action);\n        case actionTypes.FETCH_STORES_FAIL:\n            return fetchSlotsFail(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n\n","import * as actionTypes from '../actions/actionTypes';\nimport { updatedObject } from '../../utility/utility';\n\nconst initialState = {\n    message: null,\n    loading: false,\n    error: null,\n    booking: null\n};\n\nconst createBookingStart = (state, action) => {\n    return updatedObject(state, { loading: true});\n};\n\nconst createBookingSuccess = (state, action) => {\n    return updatedObject(state, {\n        message: action.message,\n        loading: false\n    });\n};\n\nconst createBookingFail = (state, action) => {\n    return updatedObject(state, { \n        loading: false,\n        error: action.error\n     });\n};\n\nconst fetchBookingStart = (state, action) => {\n    return updatedObject(state, {loading:true});\n};\n\nconst fetchBookingSuccess = (state, action) => {\n    return updatedObject(state, {\n        loading: false,\n        booking: action.booking\n    });\n};\n\nconst fetchBookingFail = (state, action) => {\n    return updatedObject(state, {\n        loading: false,\n        error: action.error\n    })\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.CREATE_BOOKING_START:\n            return createBookingStart(state, action);\n        case actionTypes.CREATE_BOOKING_SUCCESS:\n            return createBookingSuccess(state, action);\n        case actionTypes.CREATE_BOOKING_FAIL:\n            return createBookingFail(state, action);\n        case actionTypes.FETCH_BOOKING_START:\n            return fetchBookingStart(state, action);\n        case actionTypes.FETCH_BOOKING_SUCCESS:\n            return fetchBookingSuccess(state, action);\n        case actionTypes.FETCH_BOOKING_FAIL:\n            return fetchBookingFail(state, action);\n        default:\n            return state;\n    };\n};\n\nexport default reducer;\n\n\n","import * as actionTypes from '../actions/actionTypes';\nimport { updatedObject } from '../../utility/utility';\n\nconst initialState = {\n    loading: false,\n    error: null,\n    location_data:null\n};\n\nconst fetchLocationStart = (state, action) => {\n    return updatedObject(state, {loading: true});\n};\n\nconst fetchLocationSuccess = (state, action) => {\n    return updatedObject(state, {\n        loading: false,\n        location_data: action.location_data\n    });\n};\n\nconst fetchLocationFail = (state, action) => {\n    return updatedObject(state, {\n        loading: false,\n        error: action.error\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.FETCH_LOCATION_START:\n            return fetchLocationStart(state, action);\n        case actionTypes.FETCH_LOCATION_SUCCESS:\n            return fetchLocationSuccess(state, action);\n        case actionTypes.FETCH_LOCATION_FAIL:\n            return fetchLocationFail(state, action);\n        default:\n            return state; \n    };\n};\n\nexport default reducer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport thunk from 'redux-thunk';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport storeReducer from './store/reducers/store';\nimport authReducer from './store/reducers/auth';\nimport slotReducer from './store/reducers/slot';\nimport bookingReducer from './store/reducers/booking';\nimport locationReducer from './store/reducers/location';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducers = combineReducers({\n  store: storeReducer,\n  auth: authReducer,\n  slot: slotReducer,\n  booking: bookingReducer,\n  location: locationReducer\n});\n\nconst store = createStore(rootReducers, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\n\nconst app = ( <Provider store={store}>\n                <BrowserRouter>\n                 \n                    <App />\n                \n                </BrowserRouter>\n              </Provider>\n          );\n\nReactDOM.render(app,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const aux = (props) => props.children;\n\nexport default aux;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL:'https://spotbook101.herokuapp.com/'\n});\n\nexport default instance;\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-order';\n\nexport const addStoreSuccess = (response) => {\n    return {\n        type: actionTypes.ADD_STORE_SUCCESS,\n        response: response\n    };\n};\n\nexport const addStoreFail = (error) => {\n    return {\n        type: actionTypes.ADD_STORE_FAIL,\n        error: error\n    };\n};\n\nexport const addStoreStart = () => {\n    return {\n        type: actionTypes.ADD_STORE_START\n    };\n};\n\nexport const addStore = (token, data) => {\n    return dispatch => {\n        dispatch(addStoreStart());\n       console.log(token + \"---\" + JSON.stringify(data));\n        const config = {headers:{'x-auth': token}};\n        \n        axios.post('/addStore', data, config)\n            .then(response => {\n\n                if(response.data.status === 'success'){\n                    dispatch(addStoreSuccess(response.data));\n                }else{\n                    dispatch(addStoreFail(response.data.message));\n                }\n                \n            }).catch((err)=>{\n               \n                dispatch(addStoreFail(err.message));\n            });\n        \n    };\n};\n\nexport const fetchStoresSuccess = (stores) => {\n    return {\n        type: actionTypes.FETCH_STORES_SUCCESS,\n        stores: stores\n    };\n};\n\nexport const fetchStoresFail = (error) => {\n    return {\n        type: actionTypes.FETCH_STORES_FAIL,\n        error: error\n    };\n};\n\nexport const fetchStoresStart = () => {\n    return {\n        type: actionTypes.FETCH_STORES_START\n    };\n};\n\nexport const fetchStores = (token, params) => {\n    return async (dispatch) => {\n        dispatch(fetchStoresStart());\n        console.log('------' + params);\n        let queryParams = '';\n        if(params['owner_id'])\n            queryParams = `?owner_id=${params['owner_id']}`;\n        else if(params['zip'])\n            queryParams = `?zip=${params['zip']}`;\n        else if(params['city'])\n            queryParams = `?city=${params['city']}`\n     \n        const config = {headers:{'x-auth': token}};\n        \n        axios.get('/getStores' + queryParams, config)\n            .then(response => {\n\n                if(response.data.status === 'success'){\n                    let data = []; \n                    response.data.data.forEach(store => {\n                        data.push(store);\n                    })\n                                       \n                    dispatch(fetchStoresSuccess(data));\n                }else{\n                    dispatch(fetchStoresFail(response.data.message));\n                }\n                \n            }).catch((err)=>{\n                console.log(err);\n                dispatch(fetchStoresFail(err.message));\n            });\n        \n\n    };\n};\n\n\n","import axios from '../../axios-order';\nimport * as actionTypes from './actionTypes';\n\nexport const signUpStart = () => {\n    return {\n        type: actionTypes.SIGNUP_START\n    };\n};\n\nexport const signUpSuccess = () => {\n    return {\n        type: actionTypes.SIGNUP_SUCCESS\n    };\n};\n\nexport const signUpFail = (error) => {\n    return {\n        type: actionTypes.SIGNUP_FAIL,\n        error: error\n    };\n};\n\nexport const signUp = (data) => {\n    return dispatch => {\n        dispatch(signUpStart());\n\n        axios.post('/signup', data)\n            .then(response => {\n                if(response.data.status === 'success')\n                    dispatch(signUpSuccess());\n                else    \n                    dispatch(signUpFail(response.data.message));\n            }).catch(err => {\n                dispatch(signUpFail(err.message));\n            });\n    };\n};\n\nexport const authInitStart = () => {\n    return {\n        type: actionTypes.AUTH_INIT_START\n    };\n};\nexport const authInitSuccess = (mobile_number) => {\n    return {\n        type: actionTypes.AUTH_INIT_SUCCESS,\n        mobile_number: mobile_number\n    };\n};\n\nexport const authInitFail = (error) => {\n    return {\n        type: actionTypes.AUTH_INIT_FAIL,\n        error: error\n    };\n};\n\nexport const authInit = (mobile_number) => {\n    return dispatch => {\n        dispatch(authInitStart());\n        \n        const data = {\n            mobile_number: mobile_number\n        }\n        axios.post('/login', data)\n            .then(response => {\n                if(response.data.status === 'success')\n                    dispatch(authInitSuccess(mobile_number));\n                else\n                    dispatch(authInitFail(response.data.message));\n            }).catch(err => {\n                dispatch(authInitFail(err));\n            })\n    };\n};\n\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, data) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        data: data\n\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('data');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 100000);\n    };\n};\n\nexport const auth = (mobile_number, otp) => {\n    return dispatch => {\n        dispatch(authStart());\n        const data = {\n            mobile_number: mobile_number,\n            otp: otp\n        };\n        \n        axios.post('/login/verify-otp', data)\n            .then(response => {\n                if(response.data.status === 'success'){\n                    const expirationDate = new Date(new Date().getTime() + 3600000);\n                    const params = {\n                        'x-auth': response.headers['x-auth'],\n                        'expirationDate': expirationDate\n                    };\n                    \n                    localStorage.setItem('token', params['x-auth']);\n                    localStorage.setItem('expirationDate', params['expirationDate']);\n                    localStorage.setItem('data', JSON.stringify(response.data.data));\n                    dispatch(authSuccess(params['x-auth'], response.data.data));\n                    dispatch(checkAuthTimeout(3600));\n                }else{\n                    dispatch(authFail(response.data.message));\n                }\n            }).catch(err => {\n                dispatch(authFail(err.message));\n            });\n\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n       \n        if(!token){\n            dispatch(logout());\n        }else{  \n            const expiryDate = new Date(localStorage.getItem('expirationDate'));\n            const data = localStorage.getItem('data');\n            if(expiryDate <= new Date()){\n                dispatch(logout());\n            }else{\n                // const userId = localStorage.getItem('daya');\n                dispatch(authSuccess(token, JSON.parse(data)));\n                dispatch(checkAuthTimeout((expiryDate.getTime() - new Date().getTime())/1000));\n            }\n\n        }\n    };\n};\n","import axios from '../../axios-order';\nimport * as actionTypes from './actionTypes';\n\nexport const fetchSlotsSuccess = (slots) => {\n    return {\n        type: actionTypes.FETCH_SLOTS_SUCCESS,\n        slots: slots\n    };\n};\n\nexport const fetchSlotsFail = (error) => {\n    return {\n        type: actionTypes.FETCH_SLOTS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchSlotsStart = () => {\n    return {\n        type: actionTypes.FETCH_SLOTS_START\n    };\n};\n\nexport const fetchSlots = (token) => {\n    return async (dispatch) => {\n        dispatch(fetchSlotsStart());\n        const config = {headers:{'x-auth': token}};\n\n        axios.get('/getSlots', config)\n            .then(response => {\n                if(response.data.status == 'success'){\n                    let data = [];\n                    response.data.data.forEach(slot => {\n                        data.push(slot);\n                    });\n\n                    dispatch(fetchSlotsSuccess(data));\n                }else{\n                    dispatch(fetchSlotsFail(response.data.message));\n                }                \n            }).catch(err => {\n                console.log(err);\n                dispatch(fetchSlotsFail(err.message));\n            });\n\n    };\n};\n\n\n","import axios from '../../axios-order';\nimport * as actionTypes from './actionTypes';\n\nexport const createBookingStart = () => {\n    return {\n        type: actionTypes.CREATE_BOOKING_START\n    };\n};\n\nexport const createBookingFail = (error) => {\n    return {\n        type: actionTypes.CREATE_BOOKING_FAIL,\n        error: error\n    };   \n};\n\nexport const createBookingSuccess = (message) => {\n    return {\n        type: actionTypes.CREATE_BOOKING_SUCCESS,\n        message: message\n    };\n};\n\nexport const createBooking = (token, data) => {\n    return dispatch => {\n        dispatch(createBookingStart());\n\n        const config = { headers:{ 'x-auth': token}};\n\n        axios.post('/createBooking', data, config)\n            .then(response => {\n               \n                if(response.data.status === 'success')\n                    dispatch(createBookingSuccess(response.data.message));\n                else\n                    dispatch(createBookingFail(response.data.message));\n            }).catch(err => {\n                dispatch(createBookingFail(err.message));\n            });\n    };\n};\n\nexport const fetchBookingStart = () => {\n    return {\n        type: actionTypes.FETCH_BOOKING_START\n    };\n};\n\nexport const fetchBookingFail = (error) => {\n    return {\n        type: actionTypes.FETCH_BOOKING_FAIL,\n        error: error\n    };\n};\n\nexport const fetchBookingSuccess = (booking) => {\n    return {\n        type: actionTypes.FETCH_BOOKING_SUCCESS,\n        booking: booking\n    };\n};\n\nexport const fetchBooking = (token) => {\n    return dispatch => {\n        dispatch(fetchBookingStart());\n        const user_data = JSON.parse(localStorage.getItem('data'));\n        const config = { headers:{ 'x-auth': token}};\n        let data = {\n            type: user_data['type'],\n            user_id: user_data['user_id']\n        };\n        let params = '';\n        if(parseInt(data['type']) === 1){\n            params = `owner_id=${data['user_id']}`;\n        }else{\n            params = `customer_id=${data['user_id']}`;\n        }\n\n        axios.get(`/getBooking?${params}`, config)\n            .then(response => {\n                if(response.data.status === 'success')\n                    dispatch(fetchBookingSuccess(response.data.data));\n                else\n                    dispatch(fetchBookingFail(response.data.message));\n            }).catch(err => {       \n                dispatch(fetchBookingFail(err.message));\n            });\n    }\n}","import axios from '../../axios-order';\nimport * as actionTypes from './actionTypes';\n\nexport const fetchLocationStart = () => {\n    return {\n        type: actionTypes.FETCH_LOCATION_START\n    };\n};\n\nexport const fetchLocationSuccess = (location_data) => {\n    \n    return {\n        type: actionTypes.FETCH_LOCATION_SUCCESS,\n        location_data: location_data\n    };\n};\n\nexport const fetchLocationFail = (error) => {\n    return {\n        type: actionTypes.FETCH_LOCATION_FAIL,\n        error: error\n    };\n};\n\nexport const fetchLocation = () => {\n    return dispatch => {\n        dispatch(fetchLocationStart());\n       \n            navigator.geolocation.getCurrentPosition(function(position) {\n               \n                let data = {\n                    latitude: position.coords.latitude,\n                    longitude: position.coords.longitude\n                };\n                axios.get(`https://reverse.geocoder.ls.hereapi.com/6.2/reversegeocode.json?prox=${data.latitude}%2C${data.longitude}%2C250&mode=retrieveAddresses&maxresults=1&gen=9&apiKey=M_ulbe3M9PhYpDH5tZD7Y9TLxjrzTH4J9c9eSWt_3hE`)\n                .then(response => {\n                    dispatch(fetchLocationSuccess(response.data.Response.View[0].Result[0].Location.Address));\n                }).catch(err => {\n                    dispatch(fetchLocationFail(err.message));\n                });\n            });\n      \n    };\n};"],"sourceRoot":""}